read.me file

Last update: 10.10.2008 14:56


Put here all the changes made as compared to the version of  Oct.9 2008 (version 3.1.2.)


version no	date 		Line no	user		change 
----------	-----		------		-----		------
R-SWMS 1.0	July 2006					Doussan+Somma
R-SWMS 1.1	January 2007					Slight changes
R-SWMS 1.2	April 2007					Convergence criterion on water content / sinus input collar flux
R-SWMS 1.3	May 2007					Dp/sp problems fixed/ tolerances for soil PH, root PH and WC
R-SWMS 1.4	June 2007					Problems with smaller elements solved
								Solver equal to SWMS
								Sink term is corrected: only soil nodes close to roots are affected by uptake.(element based instead of point based)
R-SWMS2.0beta	June 2007					Analytical root-soil averaging
R-SWMS 2.0	September					Bugs are fixed
								Solver from root optimized
								Possibility to use analytical sol.
								Possibility to use roottyp??
								Output optimized
R-SWMS 2.4	Oktober 2007					Convergence criterion adjusted 
								Proper day-night sinus incorporated
								Analytical solution may be used; code optimized
								OpenMp routines locally build in
								Roottyp updated likewise
R-SWMS 3.0b	May 2007					Roottyp included
R-SWMS 3.1.	May 2008					Observation planes/Observation nodes
								Upper and bottom BC uniformity problems fixed
								New extraction function 'jump' in BCroot.in
								Profiles can be saved in control.in
---------------------------------------------------------------------------------
312                                                     initial version without the new solver (multiple root)
		05/10/08	2784		MJ		PHrOld replaced by PHr
				2760		MJ		hOld has been repalced by hNew
				2826-2836	MJ		lines cancelled: the soil is not recalculated at the end of the iteration
				9540		MJ		time output in log file has been increased of one digit precision
----------------------------------------------------------------------------------
312MR_TS     	    	        		TS              New soil solver using the package SPARSKIT -> in Makefile path were SPARSKIT is located is given. SPARSKIT now compiled for usage with pgf90 compiler; for usage with other compiler re-make SPARSKIT with compiler changes in makefile corresponding to SPARSKIT (/sparskit/makefile)

312MR_TS                 			MJ/HH/TS        Assembling routines for root matrix are adapted; matrix is called 'plantmatrix'
312MR_TS                 			TS              In suroutine ROOTIN the maximum  root z-coordinate is substracted from the root z-coordinates -> so that roots always start at z-coordinate ZERO. Note that the soil grid should start from ZERO as well

312MR_TS                 			TS              Analytical approach is updated for better understandability 
312MR_TS         		1234    	TS              lOrt should always be true
312MR_TS                 			TS              In outDou, where outRoo.x is build, a last column depicting the root radius is written -> for visualization purposes
------------------------------------------------------------------------------------
313		23/10/08	several     	MJ		A scenario summary output file has been added, which summarized all info. form input files
								When PlantIn was there, the simualtion was automatically level3. This has been fixed: now simulation with Doussan and root growth can be performed.
								Input file soil.in has been changed : now number of soil type must be added at line 5
313	  	28/10/08	several	MJ		In subroutine Rootin the changes made with the maximum root coordinates have been rechanged
								Additional digits have been added to the ProfileXX.out files
313		27/11/08	several	MJ		Variable 'pond' has been repalced by 'w_dis'. Variable 'sumB' has been repalced everywhere but Betdis in to 'sum_dis'
      								Variable pond_sub was repalced by w_sub

312MR_TS/313  27/11/08      several      TS             soil solver: maxit=100; lfil=3, rel. tolerance for soil = 1e-6.
313		28/11/08	several	MJ		1. RootSnk is now calculated in Solveroot, based on the volume-weighted sum of the soil node sink terms
								2. the segment length is now reestimated as the sum of the sub-segment lengths in order to avoid rounding errors in the subsegment length weighting factor
								5. there is a line I do not understand line 3901: CALL segment(xB,yB,zB,xB,yB,zB,iprvn) ?
313		3.12.08	several	MJ		variable 'Tact' is now global in the MODULE PlntData. Deleted from local input variables of several subroutines 
								Now, Tact is directly estimated in subroutine SolveRoot if lDou or in subroutine ActTrs in other cases
-------------------------------------------------------------------------------------
R-SWMS 3.2	20.01.09			MJ		Principal new feature: multiple roots can be modelled
								!!! Input files soil.in and the initial root structure file have been changed !!!
								A folder "/in" and a folder "/out" must first be created. All the input files must be located in \in
R-SWMS 3.2	18.02.09			MJ		several changes in the coupling with rootyp:
								- subroutine outroo has been adpated
								- reading of initial root system has been adpated
R-SWMS 3.2.2 	09.03.09			MJ		- output root system generated with R-SWMS has been adapted to be readable as input file
								- solute transport has been debugged and works
								- probes.out files are correctly generated
								- from now on the root architecture system file must be called RootSys (previously 300.000)
		02.04.09			MJ		- Axy,Bxy,Dxy and Exy are now in the module GridData
								- * iteration signal has been deleted in runrc
								- SinkOld,sink,csink, betaw,betac are now in GridData
								- variables sink_4rd,Sink_3rd deleted
								- line 2657     maxPhr(ipl)=maxval(abs(PHrTemp(1:nrec+1,1:nplant)))
		30.04.09			MJ		- subroutine OutDou , l. 8243: (file(13:13),'(I1)') kOuR
								- SUBROUTINE OutFEM l7991:     WRITE (file,'(A11)')'out/outfem.'
								- SUBROUTINE OutDou 8229:    WRITE (file,'(A12)')'out/outRoot.'
		5.5.9				MJ		- SUBROUTINE PlntIntest added to check whether nBCr did not exceed mxBcCh (line 2046)     
								- SUBROUTINE ObsINI created at l.7893
		11.05.09			MJ		- SUBRTOUINE nodebyprobe: ix, ix, iz now declared and no implicit added
								- calls to cputime have beend deleted throughout the code
								- SUBROUTINE WATER: -new variables eps_R,eps_WC, eps_S and eps_PH have been created and used accordingly
											- Griddata variables have been defined: USE Griddata, only: ...
								- SUBROUTINE Rootstress: - adding PH tolerance
												- IF ((stresfun.EQ.1).and.(PHtop<hx_min+del_PHr)) THEN
												- (abs(Jcol)>1.00001*abs(BCtop))) THEN !factor to avoid oscillation between stress and no stress
		20.05.09			MJ		- SUBROUTINE WATER: - line 2641 incase there is only soil, no need to run solveroot
											         IF (iter.LT.itMax) THEN
            											IF ((dPHsold.LE.deltaPHs).AND.(level.EQ.4)) THEN !the solution for soil is not evolving!
										      - line 2709 : END SUBROUTINE WATER
										      - the recalculation of the soil water head when converging is deleted!!
										      - lines 2653-4:             WRITE (*,'(''!'',$)')            WRITE (*,'('' Iter. tot.: '',I5,$)') iter_tot
		24.06.09			MJ		- SUBROUTINE WATER: several chanegs took place: water content is not re-estimated anymore or used for tolerance
										- several useless variables have been deleted
								- SUBRPOUTINE RESET: Some discrepancies with SWMS are discovered...
		16.07.09			MJ		- new function SOLVEILUT extracted from WATER subroutine
								- clean up of the WATER function
 								- SUBROUTINE RESET: checked. theta_old and theta are deleted.
R-SWMS 3.2.3.	07.08.O9			MJ		- input file SOIL.IN structure is changed
								- Now Durner mlodel is implemented
								- Celia approach implemented but not functionning
		03.11.09			MJ		- one bug regarding the building of matrix in subroutine RESET is fixed in pgf90 and gfortran (loop 240).
								- the same in resetcelia (loop 19)
----------------------------------------------------------------------------------
R-SWMS 3.3      17.02.09			TS		multiple roots + grid refinement. Four cases are possible (Refinement.in), no refinement, static a priori, dynamic a priori, or a posteriori refinement (or a combination of a priori and a posteriori)

RswmsIrregular3.6  17.02.09			TS		standalone refinement without multiple roots. Costs less memory than multiple roots. No analytical approach

----------------------------------------------------------------------------------
R-SWMS 3.4	03.02.10			VC		- DOMAIN CONTINUITY for soil and roots (concerned subroutines : CalcGeom, CalcWidthSWMS, SetupDou, Segment, Intsec, Neighb, Checksize)(currently only works when the averaging method "old" is activated in control.in):
									- Activation in the new CONTROL.IN (last line)
									- New global variable "continu" (logical, true if domain continuity activated), MODULE GRIDDATA
									- New global variable "transroot" recording the number of translations undergone by each root node and "subnode" of each plant (integer,dimension(#nodes,directionX/Y(2),#subnodes,#plants)), MODULE DOUSSANMAT
									- New output file "Transroot.out" recording the number of translations undergone by each root node of each plant
									- New global variable "isubmax" limitting the number of subsegment admitted (currently=10), MODULE DOUSSANMAT
									- New local variable "reftransroot" recording the transroot values of the reference node (integer,dimension(1:2)) in SUBROUTINE SEGMENT
									- Global variable "Intc" modified in order to record the subnode positions too (integer,dimension(#nodes,directionX/Y/Z(3),#subnodes,#plants)), MODULE DOUSSANMAT
									- SUBROUTINE SEGMENT(xA,yA,zA,xB,yB,zB,ifoln,irecn,ipl) instead of SEGMENT(xA,yA,zA,xB,yB,zB,irecn,ipl), ifoln needed as input of transroot
									- FUNCTION INTSEC(xA,yA,zA,xB,yB,zB,ifoln,irecn,isub,ipl,x1,y1,z1,x2,y2,z2,xInt,yInt,zInt,iFace) instead of INTSEC(xA,yA,zA,xB,yB,zB,x1,y1,z1,x2,y2,z2,xInt,yInt,zInt,iFace), ifoln, irecn, isub and ipl needed as inputs of transroot
								- Extraction of unnecessary calculations out of the FEM LOOP (concerned subroutines : CalcGeom, Subreg, Reset, SetBC):
									- Creation of a new SUBROUTINE CALCGEOM gathering the common part of Subreg and Reset (called during the first time step) 
									- Creation of new GLOBAL variables in order to calculate them just once during the first time step (and deletion of the corresponding local variables):
										- "VE" same meaning as previously (real (dp), dimension(#elements,#subelements(3))), MODULE GRIDDATA
										- "B1fact" recording the product "Cxz*bi(ii)+Cyz*ci(ii)+Czz*di(ii)" that are local variables in CalcGeom, needed in the Subroutine Reset, (real (dp), dimension(#elements,#subelements(3),#nodes in a tetrahedral(4))), MODULE GRIDDATA
										- "E" same meaning as previously (real (dp), dimension(#elements,#subelements(3),#nodes in a tetrahedral(4),#nodes in a tetrahedral(4))), MODULE GRIDDATA
										- "Width" same meaning as previously (real (dp), dimension(#soil nodes)), MODULE GRIDDATA
									- SUBROUTINE CALCWIDTHSWMS instead of CALCWIDTHSWMS(Width) because Width has become global
									- SUBROUTINE CALCWIDTHSWMS called after SUBROUTINE CALCGEOM during the first time step but not anymore in Reset and SetBC
								- MULTIPLE ROOTS (currently, SUBROUTINE WATER2 (called when the averaging method "old" is unactivated in control.in) is not ready for multiple roots):
									- SUBROUTINE CHECKSIZE(ipl) instead of CHECKSIZE because because different plants lay in different positions with report to the domain boundaries
									- Several global variables need one more dimension "ipl" in order to take into account the differences from one plant to the other:
										- "nsub" (dimension(#segments,#plants))(example: plant1's position is (0,0) and plant2's position is (14.5,0). If dxgrid is 1, the number of subsegments associated with each segment could be different between plant1 and plant2), MODULE DOUSSANMAT
										- "Intc" (dimension(#segments,X/Y/Z(3),max#ofsubsegments,#plants)), same reason but with the subsegments' positions, MODULE DOUSSANMAT
										- "l_sub" (dimension(#segments,max#ofsubsegments,#plants)), same reason but with the subsegments' lengths, MODULE DOUSSANMAT
										- "w_sub" (dimension(#segments,max#ofsubsegments,#plants)), same reason but with the subsegments' proportions, MODULE DOUSSANMAT
										- "cent" (dimension(#segments,X/Y/Z(3),max#ofsubsegments,#plants)), same reason but with the subsegments' centers' positions , MODULE DOUSSANMAT
										- "w_dis" (dimension(#segments,#soilnodesbycube(8),max#ofsubsegments,#plants)), same reason but with the distances "subsegment - soil node", MODULE DOUSSANMAT
										- "sum_dis" (dimension(#segments,max#ofsubsegments,#plants)), same reason but with the sum of the distances "subsegment - soil node", MODULE DOUSSANMAT
										- "cp_mean" (dimension(#segments,X/Y/Z(3),max#ofsubsegments,#plants)), same reason but with the center of the cube associated with each subsegment, MODULE DOUSSANMAT
										- "axialRootFlow" (dimension(#segments,#plants)), most of the time, the axialrootflow should be at least slightly different between plant1 and plant2, MODULE DOUSSANMAT
								- BOUNDARY CONDITIONS:
									- New upper BC "HETEROGENEOUS RAIN" (type flux) created in order to take into account the canopy redestribution of the rain
										- Inputs in the new BC.IN at the same place as previous "rain" BC (First, choose homogeneous/heterogeneous. If homogeneous, same input pattern as previously. If heterogeneous, 1st line : time1 fluxnode1 fluxnode2 fluxnode3 ... 2nd line : time2 fluxnode1 fluxnode2 fluxnode3 ... (linear interpolation occurs between the different time-Q points))
									- New BC "Point-Irrigator" (type flux)
										- Inputs in the new BC.IN just below the "rain" input (number of point-irrigators; position (X,Y,Z); number of time-Q points; list of time-Q points)
										- New global "maxIrrig" limitting the number of point-irrigators (currently=10), MODULE PARAMDATA
								- GRID.F90:
									- Automatically checks in control.in if the domain continuity is activated before builing GRID.IN
									- Now asking the number of "blocks" (cubes) in each direction instead of the number of nodes in each direction (in order to avoid confusion between the same domain with and without continuity)
									- Now asking if you want the "h" initial condition to be heterogeneous in the X direction (current heterogeneity-function is sinusoidal but the function can be changed in Grid.f90)(current initial condition in the Z-direction is hydrostatic equilibrium)
								- MISCELLANOUS:
									- If domain continuity unactivated, CHECKSIZE(ipl) called in SUBROUTINE ROOTIN in order to verify if the root is totally included in the soil domain (previously, only checked in the Z-direction)
									- If domain continuity activated, if a root node lays out of the domain (due to translation problems), SUBROUTINE NEIGHB stops and writes in which direction (X/Y/Z) the problem occured
									- In SUBROUTINE NEIGHB, delta1 now equals "x-xmin" instead of "x-xmin-1.E-6" (real root node position required!)(same modification in the Y- and Z-directions)
									- In SUBROUTINES SETUPDOU and SEGMENT, the coordinates (X1,Y1,Z1 and X2,Y2,Z2) of the 2 extreme nodes of a "block" (cube) are now corner(1)'s coordinates and corner(1)+dxgrid/+dygrid/+dzgrid's coordinates, in order to automatically avoid geometrical confusions when the domain continuity is activated (in that case, the corner(8) of the last block is actually the corner(7) of the first block, causing geometrical confusions if no adaptation in the caculation of (X2,Y2,Z2))
									- In SUBROUTINE SOLVEROOT, the calculation of "axialRootFlow" has been simplified (deletion of unuseful loops)
									- In SUBROUTINE APPLIC, the calculation of "nBand" occurs in the same way as in SWMS3D instead of beeing predefined by Grid.f90
       	10.02.10			VC		- DEBUG:
									- xBp and yBp were not calculated in FUNCTION INTSEC when no domain continuity
		10.03.10			VC		- MEMORY :
									- Reduction of several "size variables" in order to bypass the memory problems (maxplant=2, maxbdr=1250, mxBcCh=1000, maxrec=300000, mxgrw=300000, maxest=10)(warning : this kind of size reduction can cause "segmentation faults" if the memory allocated is too small)
									- New global variable "mxBcCh1" (=100) delimiting the size of root functions that don't require a very fine discretization (ex : for Kx(age) and Lr(age))
								- ROOTTYP :
									- In SUBROUTINE RUNROOTTIP, CHECKSIZE(1) only called if no domain continuity
									- In SUBROUTINE ESTIMATE_SEGLEN, the length associated with a node is the length of the segment "under the node" (younger than the node) instead of over the node -> seglen(lastnode) is the distance between the last node and the tip
									- In SUBROUTINE SIMPLIFYROOT :
										- A node is erased if "its length" is smaller than 0.8*GridResolution (and...and...), instead of, if the "length of the following node" is smaller than 0.6
										- A node won't be erased if the length of the new segment is larger than GridResolution (GridResolution=min(2.,dxGrid,dyGrid,dzGrid)) (added condition)
									- In SUBROUTINE ESTIMATE_SEGLEN2, if the length of the last node is zero, seglen(lastnode) is "the length of the previous node divided by 20", instead of, the length of the last node is the length of its previous node and the length of the previous node is the length of its previous node, and so on (this would inverse the node-seglen relation)
								- VELOCITIES :
									- In SUBROUTINE VELOC, the domain continuity can now be taken into account (no more flow directions parallel to the boundaries)
									- New global variables "Ax","Ay","Az" (dimension(#elements,#subelements/element(3),#nodes/tetrahedral(4))) created in order to shorten the velocities calculation in SUBROUTINE VELOC (variables calculated just once in SUBROUTINE CALCGEOM), MODULE GRIDDATA
									- New global variable "Deter" (dimension(#elements,#subelements/element(3))) created in order to shorten the velocities calculation in SUBROUTINE VELOC (variable calculated just once in SUBROUTINE CALCGEOM), MODULE GRIDDATA
									- Global variable "VE" gets back to local variable (VE=abs(Deter(iE,iSE))/6.)
								- MISCELLANOUS :
									- In SUBROUTINE ROOTIN and SUBROUTINE TEMPER, (temperature) variables "tempermax" and "tempermin" instead of "tmax" and "tmin" ("tmax" and "tmin" already exist as time variables)
									- In SUBROUTINE ZPROFILES, "//form//" deleted from WRITE (3 times) (created problems when writing the profile outputs)
									- In SUBROUTINE OUTROO, 1 space ("1X") added between several writing formats in WRITE (some output numbers were stuck together)
									- In SUBROUTINES OUTFEM, FLXOUT and OUTDOU, more than 99 outputs can now be saved (outfem.*** and veloc.***)
		10.05.10			VC		- ROOTTYP1BOITE :
									- New pointers "SuivSAxe" and "PrecSAxe" saving the parent-child node relationship as defined in RSWMS (used in FUNCTIONS INITIALISENOEUD, AJOUTENOEUDTERMAXE, AJOUTENOEUDLAT and EXTRACT_NODES)
								- ROOTTYP1_INTERFACE :
									- FUNCTION EXTRACT_NODES completely redesigned in order to correctly extract nodes information when senescence occured (nodes now saved from top to apex, branch by branch; the first node of a lateral branch is no more "previous node" of the rest of the father branch; several unuseful variables deleted)
									- In FUNCTION EXTRACT_NODES, a 1-node branch is no more extracted
								- ROOTTYP :
									- SUBROUTINE SIMPLIFYROOT completely redesigned in order to match with the changes in FUNCTION EXTRACT_NODES (and several unuseful variables deleted)
									- In SUBROUTINE RUNROOTTIP, ADAPTOUTROOT is not called anymore (job already done by FUNCTION EXTRACT_NODES)
									- In SUBROUTINE ESTIMATE_SEGLEN and ESTIMATE_SEGLEN2, "WHILE (brn==n & inode~=0)" instead of "WHILE (brn==n)" (used to "freeze" the calculation) and other slight changes
									- In SUBROUTINE CONDUCTROOT, the origin of the RootSys file is now automatically recognized (from RootTyp or not) and the "ordseg" variable is now correctly interpreted
								- GRID.f90 :
									- Now asking which is the initial matric potential at the top of the soil domain (hydrostatic equilibrium considered)
									- Heterogeneity of the h initial condition is no more asked but still available as option in Grid.f90
								- MISCELLANOUS :
									- In SUBROUTINE PLNTIN, the flux value given by BCroot.in for the sinusoidal transpiration function is interpreted as the daily transpiration value (no more as the maximum transpiration value)
									- In SUBROUTINE OUTROO, the segID#, prev and sg.bhd.tp. values saved in the RootSys file are now allowed to be 6 figures long
		20.05.10			VC		- ROOTTYPE1BOITE :
									- New pointer "PrecSAxe" (10.05.2010) deleted, not necessary
									- New pointer "SuivSAxe" now rightly updated in FUNCTION AJOUTENOEUDLAT
								- ROOTTYP :
									- In SUBROUTINE ESTIMATE_SEGLEN, branching node length is the length of the underlying segment on the father branch
									- In SUBROUTINE ESTIMATE_SEGLEN, "naxes" rightly counted
		10.07.10			VC		- ROOTTYPE1BOITE :
									- In FUNCTION DEFLECGEOMERIS, gravity direction corrected
									- In FUNCTION DEFLECSURFMERIS, gravity direction corrected
									- In FUNCTION DEFLECMECAMERIS, gravity direction corrected
									- In FUNCTION CROISSSOL, horizon calculation corrected
									- In FUNCTION RAMIFSOL, horizon calculation corrected
									- In FUNCTION ICMECASOL, horizon calculation corrected
									- In FUNCTION OCMECASOL, horizon calculation corrected
		01.09.10			VC		- DEBUG :
									- In SUBROUTINE SEGMENT, "reftransroot" initialised only if "continu"
									- Global variable "nsub" initialised at 1.0_dp instead of 0.0_dp
									- In SUBROUTINE SOLVEROOT, "PH_root_sub"'s 3rd dimension defined for length 10 (not 20)
									- In SUBROUTINE SETBC, "volflw" defined differently if homogene=1 in order to evite compilation problems
								- SOLUTE :
									- In SUBROUTINES SETUPDOU and SEGMENT, variable "betac" (and associated variables) calculated
									- SUBROUTINE SETUPDOU"(t,naxes,level,dt,lChem)" instead of "(t,naxes,level,dt)"
									- SUBROUTINE SEGMENT"(xA,yA,zA,xB,yB,zB,ifoln,irecn,ipl,lChem,Weight,PrvSur)" instead of "(xA,yA,zA,xB,yB,zB,ifoln,irecn,ipl)"
								- DOMAIN CONTINUITY :
									- In SUBROUTINE CALCWIDTH, "Width" calculation adaptated to continuous domain
		04.10.10			VC		- SOLUTE :
									- In SUBROUTINE PECOUR, delX, delY, delZ defined equal to dxGrid, dyGrid, dzGrid (compatibility with continuous domain)
									- In SUBROUTINE SOLUTE, bi, ci, di, Deter, Ax, Ay and Az not calculated anymore (already done in subroutine calcgeom)
									- Local variables bi, ci and di are now global variables

r922-r924	02.11.10			NS		- DEBUGGING WITH IFORT AND GFORTRAN :
				9219				  	    jlu -> integer
				4107					    subroutine SetBCroot, curr_BCtp -> integer
				156					    nLibr = 10000
				6116					    subroutine solute, kode kodeCB -> intent(inout)
				9220					    subroutine FIND, first declaration of NN and MaxNB
				7415,7417				    comment brnage, nwcamp (root growth is not working, wrong dimension of age)
				2646					    subroutine reset: remove B1
				1008					    subroutine ChInit, remove Dxy, Exy
				590					    crp  -> integer 
				8669					    linlim -> integer	    
		03.11.10			VC		- DEBUGGING WITH GFORTRAN :
									- In SUBROUTINE RUNROOTTIP, definitions of irecpr, ordseg, ibrseg, timorg, segdiam, xg, irecseg, ... dimensionnaly adjusted
									- In SUBROUTINE ESTIMATE_SEGLEN and ESTIMATE_SEGLEN2, connex(0) never defined
								- UPDATE OF ESTIMATE_SEGLEN2
								- ROOT TYPE ADAPTATIONS :
									- New global variables "maizeroottyp" and "loliumroottyp" (logical) whose values are determined in SUBROUTINE ROOTIN if RootTyp is not used and in SUBROUTINE RUNROOTTYP if RootTyp is used
									- In SUBROUTINE ESTIMATE_SEGLEN, the count of naxes is root-type dependant
									- In SUBROUTINE BETDIS, the uptake reduction factor (Urf) is root-type dependant (no more root-order dependant)
									- In SUBROUTINE CONDUCTROOT, the root conductivity is root-type dependant
		14.12.10			VC		- ROOT TYPE ADAPTATIONS :
									- In SUBROUTINE BETDIS and SETUPDOU, "typ" wasn't defined for non-maize & non-lollium root segments whose order was 1 or 2
		28.03.11                NS		- SUBELEMENTS/RLEMENTS DEFINITION
								        - Elements are now defined as cubes, splitted in 5 tetrahedral, use Grid_SWMS.f90 for grid generation
								- RESET :
								  	- sink terms are defined now on elements, not on nodes (sink_cube).
								- OUTPUT :
								   	- vtk output possible, enable flag vtk=true and create folder "vtk" in "out"
	      26.07.11			NS		- NEW FILES:
									- SolveRootDirect.f90
									- dmumps_root.h	
									- dmumps_struc.h
								- MAKEFILE:	
								  	- flags (F90FLAGS) set for inlining
									- MUMPS library linked with
								- RSWMS34.F90
									- new (logical) variable ldirect defined in the Module paramData (line 37).
									  > ".true.", MUMPS is used for solving the root system and store the root-matrix instead of rebuild it in every time ste
									  > "false" root system is solved with the iterative solver and the matrix is rebuild in every step
									- smaller changes (e.g. reordered indices of some arrays, FIND in RESET replaced by an array)
		25.10.11			VC		- SOIL TAB:
									- New global variable "soiltab" (logical) whose value is .fasle. by default and set to .true. in SUBROUTINE SOILIN if "soil.in" doesn't exist and "soiltab.in" exists
									- In SUBROUTINE SETMAT, soiltab information can be interpreted for arbitrary pF increments
								- GRID_SWMS:
									- New local variable "bilayered" (logical) set to .true. if two soil hydraulic properties are defined in "soil.in" or in "soiltab.in", in that case the depth of the interface between these layers is asked when running "grid_forward"
									- New local variable "ICType" (integer) to be defined when running "grid_forward" : "1" for constant soil matric potential, "2" for hydrostatic equilibrium, "3" for initial soil matric potential from an existing "outfem.***" file (in that case the path should be defined in Grid_SWMS.f90 before compiling it)
		09.10.12			VC		- RSWMS OPTIONS:
									- Root water uptake model (no RWU/Feddes/Doussan/Couvreur), source of root architecture (no archi/RootSys/RootTyp/Somma), root growth model (no root growth/RootTyp growth/Somma growth), assimilate allocation, solute transport, direct doussan, vtk and patrace outputs now defined in control.in (all the corresponding variables have become global variables)
									- Level concept and no_root variable cancelled
									- Tpot.in input file removed, now the potential transpiration is read in BCroot.in (if there is root water uptake) apart from the case there is assimilate allocation (then, the SUBROUTINE SETTP is used to predict potential transpiration)
								- COUVREUR ROOT WATER UPTAKE MODEL:
									- In SUBROUTINE SETSNK, Couvreur root water uptake model added (the corresponding input file is Couvreur.in, the SSD dimensions should fit to the soil grid dimensions)
									- New SUBROUTINE SSDIS reading Couvreur.in input file that contains the SSD, Krs, Kcomp, the limiting root collar water potential for water stress and the choice of using or not the stress indicator
									- New SUBROUTINE COUVREURROOTSTRESS adapting the stress logical variables to the (non-)occurence of stress according to Couvreur et al. stress function
								- DEBUG:
									- in MAIN, local variable "iter" now initialised at 5 (which induces no initial in-/de-crease in time increment)
--------------------------------------------------------
		11.07.2012			KH		-GRID_SWMS: 
									- variable 'geom' has options for either (1) horizontally split (layers), (2) vertically split or (3) cylindrical geometries
								-R-SWMS
								  	- New Subroutines: 
									      -Hormone: calculates a signal at the root tips as a function of surrounding soil pressure head
									      -Atmosphere: determines atmospheric temperature, pressure and pressure deficit
									--> if in CondRoot.in the stress condition (stresfun) is set to 4, the reduction function (reduc) is calculated based on Tardieu&Davies (1993) where stomatal 
									    conductance is a function of additional signal and pressure head at the root collar
									--> if carbon allocation is set to true (lCalloc =.T.), stomatal conductance is calculated in the subroutine SetTp 
									RootTyp.f90: L363: removal of ' .../2'
									-Further minor changes in most of the other .f90 files
								-Input Files
								       Changes in CondRoot.in, temp.in, root.in (removal of redundant information on min. PH in root collar)
								       Change in control.in --> choice for temperature influence (i_temp, ltemp)
								       	      variable temp changed to ltemp and is now stored in RootData in Modules.f90
--------------------------------------------------------
		19.07.2012			KH+NS		-RSWMS:
									- New Subroutines:
									      - RSWMS: change from main program to a subroutine, calculates now one timestep of RSWMS
									      - RSWMS_INI: takes care if all initatilsation things in rswms
									      - timestep: calcultes one the next timestep-size 
								-Main:	      
									- NEW: Main.f90
									       here, the main program is now defined: first RSWMS_INI is called, then a timeloop define where the subroutine RSMWS and timestep are called
							        *.f90-files: 
									 - TAKE CARE: because of the changes above, a lot of the variables are now defined in modules, and -because of that - the passed parameter for several subroutines changed
							        -Input Files
								       Changes in root.in, chem.in, CondRoot.in
								       --> temp.in is needed if ltemp in control.in is set OR if lSign in CondRoot.in is set (lSign=TRUE if stresfun=4)
								           ltemp simulates temperature influences of root growth (soil temperature...)
									   lSign simulates signaling (atmospheric conditions)
									   --> Both soil temperature and atmospheric conditions are found in temp.in
---------------------------------------------------------
		30.07.2012			KH		-Input Files
								       Changes in bc.in --> possibility to define partially irrigated area (confined by xmin and xmax)
								       	       	  	    possibility to define bottom PH bc, for complete area and partial area
								-RSWMS
									Minor changes in Input.f90, Modules.f90, Doussan.f90, RSWMS34.f90, RootGrowth.f90, Environmental.f90 (signaling / SUBROUTINE HORMONE / 
									is now a function of xylem pressure head of the last root segment)
---------------------------------------------------------
		23.04.2013			NS		Coupeld R-SWMS - PARTRACE Version

								- New folders:
								  src_rswms: all source-files of R-SWMS *.f90 and RootTyp *.c *.h 
								  src_partrace: all source and header-files of PARTRACE *.cpp, *.hpp
								  PartraceInOut: In- and Output-folder for Partrace, has to fit to Input from R-SWMS!!
								  
								- New files:
								  Input_PARTRACE.pTRACEInpV12: main Input-file of Partrace
								  SolutePartrace.f90: subroutines used in the coupling version (vtk-output, reordering of arrays, etc.)
								  Makefile.defs: defines coupling (on/off), compiler, compiler-flags, linker-flags, Makefile-variables, libs to be linked
								- Makefiles:
								  each src-folder contains its own Makefile which creates an lib for rswms (librswms.a) and (if enabled) partrace (libpartrace.a)
								  Main-Makefile (in RSMWS6- folder) calls the the Makefile for rswms and partrace
								  all Makefiles use the Makefile.defs-definitions and variables
								  Makefile creates a .bulid-folder which contains all *.o *.a -files, make clean deletes .build-folder

								- Running coupeld PARTRACE version 
								  Variable PARTACE = 0 in Makefile.defs, coupling with PARTARCE will be not compiled
								  Variable PARTACE = 1 in Makefile.defs, coupling with PARTRACE will be compiled and feedback of concentration (osmotic head) will influence root water uptake, transformation coefficient beta form concentration to osmotic head (ho = beta * c) can be set in subroutine Salnity (SolutePartrace.f90)
								  Inputfiles of Partrace have to fit to Inputfiles of R-SWMS (geometry, boundary conditions, etc.)
---------------------------------------------------------
		05.07.2013			KH		Hormonal Signaling
								
								- New Folder: SoluteRoot.f90
								- Activate in CondRoot.in --> stresfun == 4 | 5, where 4 means that the internal particle tracker is 'ON'
								  and 5 that there is an instantaneous signal, without considering any particle transport
								- New input scenario: in_signal
---------------------------------------------------------
		26.07.2013			KH		Secondary radial growth
								
								- additional parameter in root.in; constant growth factor (f_rad>1) that it multiplied with the old radius at every growth time step
								  f_rad is a function of the root order and remains constant over the age of the root
								  --> compare to RootTyp

								Non-uniform irrigation
								- some information was lost before -- changes in Water.f90, Input.f90
								- changes in CondRoot.in

								Signaling
								- implementation of a buffer, the first segment of the root acts as a buffer for the hormonal signal to prevent oscillations
---------------------------------------------------------
		29.08.2013			KH		Update of root system
								if a measured root system is taken as input for RSWMS, then only the oldest system can be used 
								if then the RADIAL conductivity of age = 0 (and younger) was set to 0, then at each time step, 'new'
								segments are taken into account where radial conductivity takes a certain value...
---------------------------------------------------------
		12.09.2013			KH		Cylindrical upper soil bc
								define qfun == 5 in bc.in, defines Kode==1 for MatNum==1
								!!!BEWARE, that the circular area is NOT equal to pi*r*r!!! there is always a factor to consider!
								suggestion: run rswms with a certain irrigation and compare output (remove.out) to your 'wanted' irrigation --> calculate
								a correction factor and adjust either irrigation rate or transpiration rate (in BCroot.in)

								Cylindrical root growth
								Addition of Subroutine Boxlim_Cylinder in RootGrowth.f90 --> refelection of roots at cylindrical boundary
								Reads mesh.in for the radius of the cylinder
---------------------------------------------------------
		17.09.2013			KH		Changes in Neighb
								--> now if root node is at either maximum/minimum edge of the soil domain (xRoot=xmaxGrid AND/OR yRoot=ymaxGrid AND/OR zRoot=zminGrid)
								the last soil element is 'found'; 
								Test for doxygen comments; !<  
								  
---------------------------------------------------------
		25.09.2013			KH		Changes in RootGrowth / Boxlim_Cylinder
								- root is now not growing across the edges of the cylindrical domain anymore
								Changes in Grid_SWMS
								- definition of the cylinder is now such that the maximum extend in x and y (the diagonal is smaller!) is equal to the radius from mesh.in
---------------------------------------------------------
		01.10.2013			KH		Changes in RootGrowth / Boxlim_Cylinder
								- root is growing within a cylinder of a radius (rad_cyl/sqrt(2)) - the edges of the domain are not touched.
								- root radii are now stored as segrad(maxrec)
								- MPL (mass per length) is also stored 
								NOTE THAT lengths are always double precision, times are single precision!
								Changes in Grid_SWMS
								- cylinder definition back to previous						
---------------------------------------------------------
		14.11.2014			KH		Changes in RootGrowth
								- in Somma growth the root segments are now also defined at the following tips, not anymore at the previous!
								- Macropore growth and water uptake
								  growth adaptations to soil strength were updated to Bengough, 2007
								  when roots grow at a macropore interface (soil nodes with mixed material, bulk and macropore mat.), water is taken up at only from 
								  the bulk material with a conductivity proportional to the nodes belonging to the bulk (1/8 - 8/8)
								- root growth can now also grow in a continous domain
								Changes in BCroot.in
								- sine or truncated sine BC is interpolated with a fixed timestep between given dates						
---------------------------------------------------------
		05.12.2014			KH		Commit of RSWMS6.2
								No major changes. 
								Removal of RSWMSmerge.f90. Rename RSWMSfebruary.f90 to RSWMS_oldversion.f90.
								Addition of doxygen comments in most of the program files (some are still missing)
								Addition of an Example folder with 7 examples
								Removal of Grid.f90 -- only Grid_SWMS.f90 remains therefore
---------------------------------------------------------
		XX.YY..2015			KH		Changes of input files
								--> shorter, with variable names - easier to find the variables and parameters in the code
								--> detailed explanations are given in the new manual						
---------------------------------------------------------
		18.03.2015			KH		Implementation of Pesticide Uptake
								Changes in partrace as well as rswms files
								and CondRoot.in
								!BEWARE! IT'S STILL IN TEST MODE =/						
---------------------------------------------------------
		27.03.2015			KH		Commit of RSWMS7
								Solute Uptake:
								Solutes can be taken up via diffusion (concentration comes from Partrace) and passivly 
								Particles are generated within the roots as a function of uptake
								Solutes in the roots can sorb (linear, Freundlich)
								--> CondRoot.in changed as well
								Partrace:
								Small changes in partrace_interface.cpp to solve a bug with respect to exclusion
								Root Growth / RootSys
								There were problems with root radii, when root systems generated via Somma were used for subsequent simulations
								This was due to the precision of the RootSys files, as radii were calculated via surface and segment length - in case
								of short segments, this could lead to considerably different radii
								--> output precision for writing RootSys files was changed to 8 digits
								--> reduced the problem
								
----------------------------------------------------------
		26.01.2016		      NS		Rhizosphere model 
								Addition of Rhizo.in file in which rhizosphere parameters are define
								Addition of RhizoIn SUBROUTINE in Input.f90. This SUBROUTINE read rhizospher parameters and calculate the static rhizosphere parameters. 
								Note that calculation of Static rhizopshere parameters is iterative and needs to be improved (using least square).
								Addition of rhizoData MODULE to Modules. 
							        Addition of DisToRoot MODULE. In this Module the concentration of mucilage (cTot_r) for each soil node and Rnorm are calculated.
								Changes in Fth and FthNrm to include Brooks and Corey (parameters define in Rhizo.in) 
-----------------------------------------------------------
	       04.02.2016                     NS                Addition of SetMatRhizo which is similar to SetMat but is used in case of rhizospehre model.
								Changing Fth, FKP and FCP so they will include rhizosphere model. 
								Changing output such that when rhizospehre model is choosen, a cTot, Rnorm and thetaTot output is added to the vtk.
								Changes in all locations where the FCP FKP AND Fth functions are called																
-----------------------------------------------------------
	       05.05.2016                     KH                Changes in Solute Uptake (if lPartUp); main bug fixes in SoluteRoot.f90, uptake.cpp 														
